trigger:
- '*'

variables:
  buildConfiguration: 'Release'
  releaseBranchName: 'release'
  appName: 'Tailspin.SpaceGame.Web'
  
schedules:
  - cron: '*/15 * * * *'
    displayName: Build schedule
    branches:
      include:
      - release
      - master
    always: true


stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'

    strategy:
      matrix:
        linux-18.04: 
          imageName: 'ubuntu-18.04'

    pool:
      vmImage: $(imageName)
      demands:
      - npm

    variables:
      wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
      dotnetSdkVersion: '3.1.x'

    steps:
    - script: 'echo "$(Build.DefinitionName) | $(Build.BuildId) | $(Build.BuildNumber)" > buildinfo.txt'
      displayName: 'Write build info'
      workingDirectory: $(wwwrootDir)

    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
      inputs:
        packageType: sdk
        version: $(dotnetSdkVersion)

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    # - template: templates/build.yml
    #   parameters:
    #     buildConfiguration: '$(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '$(buildProjects)'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: 'publish'
        publishWebProjects: false      
        projects: '$(buildProjects)'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/PressTrust/Bin'
        zipAfterPublish: false   

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      condition: succeeded()
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: drop