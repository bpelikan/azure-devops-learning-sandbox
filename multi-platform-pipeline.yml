trigger:
- '*'

strategy:
  matrix:
    linux-latest:
      imageName: 'ubuntu-latest'
    # linux-20.04:
    #   imageName: 'ubuntu-20.04'
    linux-18.04:
      imageName: 'ubuntu-18.04'
    # linux-16.04:
    #   imageName: 'ubuntu-16.04'
    # mac:
    #   imageName: 'macos-10.14'
    # windows-2019:
    #   imageName: 'windows-2019'
    # windows-win2016:
    #   imageName: 'vs2017-win2016'

pool:
  vmImage: $(imageName) #ubuntu-latest

variables:
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.x'

steps:
- script: 'echo "$(Build.DefinitionName) | $(Build.BuildId) | $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: $(wwwrootDir)

- task: UseDotNet@2
  displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
  inputs:
    packageType: sdk
    version: $(dotnetSdkVersion)

- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- template: templates/build.yml
  parameters:
    buildConfiguration: '$(buildConfiguration)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'Tailspin.SpaceGame.Web'